// messages.js

function getColorEmoji(color) {
    switch (color) {
        case 'green':
            return 'üü¢'
        case 'red':
            return 'üî¥'
        case 'blue':
            return 'üîµ'
        case 'white':
            return '‚ö™Ô∏è'
        default:
            return '' // –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É, –µ—Å–ª–∏ —Ü–≤–µ—Ç –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –Ω–∏ –æ–¥–Ω–æ–º—É –∏–∑ –∑–∞–¥–∞–Ω–Ω—ã—Ö
    }
}

const operatorTypeMapping = { f: '–§—Ä–µ–∑–µ—Ä', t: '–¢–æ–∫–∞—Ä—å' }

const moment = require('moment')
const { formatNumber } = require('#src/modules/sk_operator/helpers')

function calculateAndFormatPaymentInfo(paymentData) {
    // –í—ã—á–∏—Å–ª—è–µ–º –¥–æ–ª—é –æ—Ç –ø—Ä–∏–±—ã–ª–∏
    const partOfProfit = (paymentData.grade * paymentData.work_hours) / 168
    const formattedPartOfProfit = partOfProfit.toFixed(5) // –£–≤–µ–ª–∏—á–∏–º —Ç–æ—á–Ω–æ—Å—Ç—å –æ–∫—Ä—É–≥–ª–µ–Ω–∏—è

    // –í—ã—á–∏—Å–ª—è–µ–º –ó–ü
    const salary = ((paymentData.vvp * 0.2) / paymentData.part_sum) * partOfProfit
    const formattedSalary = formatNumber(salary.toFixed(5)) // –£–≤–µ–ª–∏—á–∏–º —Ç–æ—á–Ω–æ—Å—Ç—å –æ–∫—Ä—É–≥–ª–µ–Ω–∏—è
    const formattedSalaryVAT = formatNumber(
        (salary.toFixed(5) * (1 - 0.13)).toFixed(2),
    ) // –ó–¥–µ—Å—å –æ–∫—Ä—É–≥–ª–µ–Ω–∏–µ –¥–æ 2 –∑–Ω–∞–∫–æ–≤ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π

    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É
    return (
        '<b>–§–æ—Ä–º—É–ª–∞:</b>\n' +
        '‚óâ –î–æ–ª—è –æ—Ç –ø—Ä–∏–±—ã–ª–∏ = –ì—Ä–µ–π–¥ * –û—Ç—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ —á–∞—Å—ã / 168\n' +
        '‚óâ –î–æ –≤—ã—á–µ—Ç–∞ –Ω–∞–ª–æ–≥–∞ = –î–æ–ª—è –∫–æ–º–∞–Ω–¥—ã / –°—É–º–º–∞ –¥–æ–ª–µ–π * –î–æ–ª—è –æ—Ç –ø—Ä–∏–±—ã–ª–∏\n' +
        '‚óâ –í–∞—à–∞ —á–∏—Å—Ç–∞—è –ø—Ä–∏–±—ã–ª—å –Ω–∞ —Å–µ–≥–æ–¥–Ω—è = –î–æ –≤—ã—á–µ—Ç–∞ –Ω–∞–ª–æ–≥–∞ - 13%\n' +
        '\n' +
        '<b>–†–∞—Å—á—ë—Ç:</b>\n' +
        `‚Ä¢ –ì—Ä–µ–π–¥: <b>${paymentData.grade.toFixed(2)}</b>\n` +
        `‚Ä¢ –û—Ç—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ —á–∞—Å—ã: <b>${formatNumber(paymentData.work_hours)}</b>\n` +
        `‚Ä¢ –î–æ–ª—è –∫–æ–º–∞–Ω–¥—ã: <b>${formatNumber(paymentData.vvp * 0.2)}</b>\n` +
        `‚Ä¢ –°—É–º–º–∞ –¥–æ–ª–µ–π: <b>${paymentData.part_sum.toFixed(2)}</b>\n` +
        `‚Ä¢ –î–æ–ª—è –æ—Ç –ø—Ä–∏–±—ã–ª–∏: <b>${formattedPartOfProfit}</b>\n` +
        '‚Ä¢ –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å–æ–≤: <b>168</b>\n' +
        '\n' +
        `‚àô –î–æ–ª—è –æ—Ç –ø—Ä–∏–±—ã–ª–∏:\n<b>${paymentData.grade.toFixed(2)} * ${formatNumber(paymentData.work_hours)} / 168 = <u>${formattedPartOfProfit}</u></b>\n` +
        `‚àô –î–æ –≤—ã—á–µ—Ç–∞ –Ω–∞–ª–æ–≥–∞:\n<b>${formatNumber(paymentData.vvp * 0.2)} / ${paymentData.part_sum.toFixed(2)} * ${formattedPartOfProfit} = ${formatNumber(paymentData.payment) || formattedSalary} ‚ÇΩ</b>\n` +
        `‚àô –í–∞—à–∞ —á–∏—Å—Ç–∞—è –ø—Ä–∏–±—ã–ª—å –Ω–∞ —Å–µ–≥–æ–¥–Ω—è: <b><u>${formatNumber(paymentData.payment * (1 - 0.13)) || formattedSalaryVAT}</u> ‚ÇΩ</b>\n`
    )
}

module.exports = {
    payments: (paymentData) =>
        `<b>${getColorEmoji(paymentData.color)} ${paymentData.fio} (${paymentData.grade_info || ''})</b>\n` +
        `<b>${paymentData.post || ''} ${paymentData.operator_type ? `(${operatorTypeMapping[paymentData.operator_type]})` : ''}</b>\n` +
        `–î–∞—Ç–∞: <b>${moment(paymentData.date, 'YYYY-MM-DD').format('DD.MM.YYYY')}</b> \n` +
        '<blockquote>' +
        `–û—Ç—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ —á–∞—Å—ã:  <b>${formatNumber(paymentData.work_hours)}</b>\n` +
        `–ì—Ä–µ–π–¥: <b>${paymentData.grade.toFixed(2)}</b>\n\n` +
        `–ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–π —Ä–æ—Å—Ç –¥–æ—Ö–æ–¥–∞:\u00A0\u00A0<b>${paymentData.payments_diff.toFixed(2)}</b>\u00A0%\n` +
        `–î–æ–ª—è –∫–æ–º–∞–Ω–¥—ã:\u00A0\u00A0<b>${formatNumber(paymentData.vvp * 0.2)}</b>\u00A0‚ÇΩ\n` +
        `–í–ü:\u00A0\u00A0<b>${formatNumber(paymentData.vvp)}</b>\u00A0‚ÇΩ\u00A0\u00A0\n` +
        '</blockquote>' +
        `üìà –í–∞—à–∞ —á–∏—Å—Ç–∞—è –ø—Ä–∏–±—ã–ª—å –Ω–∞ —Å–µ–≥–æ–¥–Ω—è: <u><b>${formatNumber(paymentData.payment * (1 - 0.13))}</b></u>\u00A0‚ÇΩ\n`,

    paymentsOperator: (paymentData) =>
        `<b>${getColorEmoji(paymentData.color)} ${paymentData.fio} (${paymentData.grade_info || ''})</b>\n` +
        `<b>${paymentData.post || ''} ${paymentData.operator_type ? `(${operatorTypeMapping[paymentData.operator_type]})` : ''}</b>\n` +
        `–î–∞—Ç–∞: <b>${moment(paymentData.date, 'YYYY-MM-DD').format('DD.MM.YYYY')}</b> \n` +
        '<blockquote>' +
        `–†–µ–π—Ç–∏–Ω–≥:  <b>${paymentData.rating_good}\u00A0</b>–∏–∑<b>\u00A0${paymentData.group_count}\u00A0</b>–¶–ö–ü:<b>\u00A0${paymentData.kpi_good}</b>\n` +
        `–†–µ–π—Ç–∏–Ω–≥ –ö–∞—á–µ—Å—Ç–≤–∞:  <b>${paymentData.rating_brak}\u00A0</b>–∏–∑<b>\u00A0${paymentData.group_count}\u00A0</b>–ë—Ä–∞–∫:<b>\u00A0${paymentData.kpi_brak}</b>\n` +
        `–û—Ç—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ —á–∞—Å—ã:  <b>${formatNumber(paymentData.work_hours)}</b>\n` +
        `–ì—Ä–µ–π–¥: <b>${paymentData.grade.toFixed(2)}</b>\n\n` +
        `–°–º–µ–Ω–∞:\u00A0\u00A0<b>${paymentData.smena}</b>\u00A0` +
        `–¶–ö–ü:\u00A0\u00A0<b>${formatNumber(paymentData.kpi)}</b>\u00A0` +
        `–†–µ–π—Ç–∏–Ω–≥:\u00A0\u00A0<b>${paymentData.rating_pos}</b>\n` +
        `–û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –æ—Ç —Ü–µ–ª–∏ —É—á–∞—Å—Ç–∫–∞ –ß–ü–£:\u00A0\u00A0<b>${paymentData.prod_diff.toFixed(2)}</b>\u00A0%\n\n` +
        `–ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–π —Ä–æ—Å—Ç –¥–æ—Ö–æ–¥–∞:\u00A0\u00A0<b>${paymentData.payments_diff.toFixed(2)}</b>\u00A0%\n` +
        `–î–æ–ª—è –∫–æ–º–∞–Ω–¥—ã:\u00A0\u00A0<b>${formatNumber(paymentData.vvp * 0.2)}</b>\u00A0‚ÇΩ\n` +
        `–í–ü:\u00A0\u00A0<b>${formatNumber(paymentData.vvp)}</b>\u00A0‚ÇΩ\u00A0\u00A0\n` +
        '</blockquote>' +
        `üìà –í–∞—à–∞ —á–∏—Å—Ç–∞—è –ø—Ä–∏–±—ã–ª—å –Ω–∞ —Å–µ–≥–æ–¥–Ω—è: <u><b>${formatNumber(paymentData.payment * (1 - 0.13))}</b></u>\u00A0‚ÇΩ\n`,

    formula: (paymentData) => calculateAndFormatPaymentInfo(paymentData),
}
