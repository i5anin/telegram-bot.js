// messages.js

function getColorEmoji(color) {
  switch (color) {
    case 'green':
      return 'üü¢'
    case 'red':
      return 'üî¥'
    case 'blue':
      return 'üîµ'
    case 'white':
      return '‚ö™Ô∏è'
    default:
      return '' // –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É, –µ—Å–ª–∏ —Ü–≤–µ—Ç –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –Ω–∏ –æ–¥–Ω–æ–º—É –∏–∑ –∑–∞–¥–∞–Ω–Ω—ã—Ö
  }
}

const operatorTypeMapping = { f: '–§—Ä–µ–∑–µ—Ä', t: '–¢–æ–∫–∞—Ä—å' }

const moment = require('moment')
const { formatNumber } = require('#src/modules/sk_operator/helpers')

module.exports = {
  payments: (paymentData) =>
    `<b>${getColorEmoji(paymentData.color)} ${paymentData.fio} (${paymentData.grade_info || ''})</b>\n` +
    `<b>${paymentData.post || ''} ${operatorTypeMapping[paymentData.operator_type] || ''}</b>\n` +
    `–î–∞—Ç–∞: <b>${moment(paymentData.date, 'YYYY-MM-DD').format('DD.MM.YYYY')}</b> \n` +
    '<blockquote>' +
    `–û—Ç—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ —á–∞—Å—ã:  <b>${formatNumber(paymentData.work_hours)}</b>\n` +
    `–ì—Ä–µ–π–¥: <b>${paymentData.grade.toFixed(2)}</b>\n\n` +
    `–ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–π —Ä–æ—Å—Ç –¥–æ—Ö–æ–¥–∞:\u00A0\u00A0<b>${paymentData.payments_diff.toFixed(2)}</b>\u00A0%\n` +
    `–î–æ–ª—è –∫–æ–º–∞–Ω–¥—ã:\u00A0\u00A0<b>${formatNumber(paymentData.vvp * 0.2)}</b>\u00A0‚ÇΩ\n` +
    `–í–ü:\u00A0\u00A0<b>${formatNumber(paymentData.vvp)}</b>\u00A0‚ÇΩ\u00A0\u00A0\n` +
    '</blockquote>' +
    `üìà –í–∞—à–∞ —á–∏—Å—Ç–∞—è –ø—Ä–∏–±—ã–ª—å –Ω–∞ —Å–µ–≥–æ–¥–Ω—è: <tg-spoiler><b>${formatNumber(paymentData.payment * (1 - 0.13))}</b></tg-spoiler>\u00A0‚ÇΩ\n`,

  paymentsOperator: (paymentData) =>
    `<b>${getColorEmoji(paymentData.color)} ${paymentData.fio} (${paymentData.grade_info || ''})</b>\n` +
    `<b>${paymentData.post || ''} ${operatorTypeMapping[paymentData.operator_type] || ''}</b>\n` +
    `–î–∞—Ç–∞: <b>${moment(paymentData.date, 'YYYY-MM-DD').format('DD.MM.YYYY')}</b> \n` +
    '<blockquote>' +
    `–†–µ–π—Ç–∏–Ω–≥:  <b>${paymentData.rating_good}\u00A0</b>–∏–∑<b>\u00A0${paymentData.group_count}\u00A0</b>–¶–ö–ü:<b>\u00A0${paymentData.kpi_good}</b>\n` +
    `–†–µ–π—Ç–∏–Ω–≥ –ö–∞—á–µ—Å—Ç–≤–∞:  <b>${paymentData.rating_brak}\u00A0</b>–∏–∑<b>\u00A0${paymentData.group_count}\u00A0</b>–ë—Ä–∞–∫:<b>\u00A0${paymentData.kpi_brak}</b>\n` +
    `–û—Ç—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ —á–∞—Å—ã:  <b>${formatNumber(paymentData.work_hours)}</b>\n` +
    `–ì—Ä–µ–π–¥: <b>${paymentData.grade.toFixed(2)}</b>\n\n` +
    `–°–º–µ–Ω–∞:\u00A0\u00A0<b>${paymentData.smena}</b>\u00A0` +
    `–¶–ö–ü:\u00A0\u00A0<b>${formatNumber(paymentData.kpi)}</b>\u00A0` +
    `–†–µ–π—Ç–∏–Ω–≥:\u00A0\u00A0<b>${paymentData.rating_pos}</b>\n` +
    `–û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –æ—Ç —Ü–µ–ª–∏ —É—á–∞—Å—Ç–∫–∞ –ß–ü–£:\u00A0\u00A0<b>${paymentData.prod_diff.toFixed(2)}</b>\u00A0%\n\n` +
    `–ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–π —Ä–æ—Å—Ç –¥–æ—Ö–æ–¥–∞:\u00A0\u00A0<b>${paymentData.payments_diff.toFixed(2)}</b>\u00A0%\n` +
    `–î–æ–ª—è –∫–æ–º–∞–Ω–¥—ã:\u00A0\u00A0<b>${formatNumber(paymentData.vvp * 0.2)}</b>\u00A0‚ÇΩ\n` +
    `–í–ü:\u00A0\u00A0<b>${formatNumber(paymentData.vvp)}</b>\u00A0‚ÇΩ\u00A0\u00A0\n` +
    '</blockquote>' +
    `üìà –í–∞—à–∞ —á–∏—Å—Ç–∞—è –ø—Ä–∏–±—ã–ª—å –Ω–∞ —Å–µ–≥–æ–¥–Ω—è: <tg-spoiler><b>${formatNumber(paymentData.payment * (1 - 0.13))}</b></tg-spoiler>\u00A0‚ÇΩ\n`,

  formula: (paymentData) =>
    '<b>–§–æ—Ä–º—É–ª–∞:</b>\n' +
    '–ó–ü\u00A0= –í–ü\u00A0/\u00A0–°—É–º–º–∞ –¥–æ–ª–µ–π\u00A0*\u00A0–î–æ–ª—è\u00A0–æ—Ç\u00A0–ø—Ä–∏–±—ã–ª–∏\n' +
    '–î–æ–ª—è\u00A0–æ—Ç\u00A0–ø—Ä–∏–±—ã–ª–∏ = –ì—Ä–µ–π–¥\u00A0*\u00A0–û—Ç—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ\u00A0—á–∞—Å—ã\u00A0/\u00A0168\n' +
    `–°—É–º–º–∞ –¥–æ–ª–µ–π: <b>${paymentData.part_sum.toFixed(2)}</b>\n` +
    `–î–æ–ª—è –æ—Ç –ø—Ä–∏–±—ã–ª–∏: <b>${paymentData.part.toFixed(2)}</b>`
}
