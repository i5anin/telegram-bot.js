// –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º —Å–æ–±—ã—Ç–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —á–∞—Ç
const { checkUser } = require('#src/api/index')
const { logMessage } = require('#src/utils/ru_lang')
const { getAllUsers } = require('#src/api/index')
const { post } = require('axios')

async function logNewChatMembers(ctx) {
  const chatTitle = ctx.chat.title || '–ù–µ–Ω–∞–∑–≤–∞–Ω–Ω—ã–π —á–∞—Ç'
  const addedUsers = ctx.message.new_chat_members

  for (const newUser of addedUsers) {
    const username = newUser.username || 'N/A'
    const fullName =
      `${newUser.first_name || ''} ${newUser.last_name || ''}`.trim()
    const userId = newUser.id

    const usersData = await getAllUsers()
    const user = usersData.find((u) => u.user_id === userId)

    // –°–æ–∑–¥–∞–π—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç –Ω–∞–ª–∏—á–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    const message =
      `${emoji.ok} –î–æ–±–∞–≤–∏–ª–∏ –≤ –≥—Ä—É–ø–ø—É <code>${chatTitle}</code>\n\n` +
      logMessage(userId, user ? user.fio : 'N/A', username, fullName)

    await ctx.telegram.sendMessage(LOG_CHANNEL_ID, message, {
      parse_mode: 'HTML'
    })
  }
}

// –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º —Å–æ–±—ã—Ç–∏–µ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —á–∞—Ç–∞
async function logLeftChatMember(ctx) {
  const chatTitle = ctx.chat.title || '–ù–µ–Ω–∞–∑–≤–∞–Ω–Ω—ã–π —á–∞—Ç'
  const leftUser = ctx.message.left_chat_member

  if (leftUser) {
    const username = leftUser.username || 'N/A'
    const fullName =
      `${leftUser.first_name || ''} ${leftUser.last_name || ''}`.trim()
    const userId = leftUser.id

    const usersData = await getAllUsers()
    const user = usersData.find((u) => u.user_id === userId)

    const message =
      `${emoji.x} –ü–æ–∫–∏–Ω—É–ª –≥—Ä—É–ø–ø—É <code>${chatTitle}</code>\n\n` +
      logMessage(userId, user ? user.fio : 'N/A', username, fullName)

    await ctx.telegram.sendMessage(LOG_CHANNEL_ID, message, {
      parse_mode: 'HTML'
    })
  } else {
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–ª—É—á–∞—è, –∫–æ–≥–¥–∞ –æ–±—ä–µ–∫—Ç leftUser –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–∫–∏–Ω—É–ª —á–∞—Ç –¥–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–±—ã—Ç–∏—è)
    console.log('–û–±—ä–µ–∫—Ç leftUser –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.')
  }
}

// // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ –∫–∞–Ω–∞–ª–µ
// bot.on('channel_post', async (ctx) => {
//     const channelTitle = ctx.chat.title || '–ù–µ–Ω–∞–∑–≤–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª';
//     const messageId = ctx.message.message_id;
//     const text = ctx.message.text || 'N/A';
//     const date = new Date(ctx.message.date * 1000); // –î–∞—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
//
//     const message = `üì¢ –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –∫–∞–Ω–∞–ª–µ <code>${channelTitle}</code>\nMessage ID: <code>${messageId}</code>\n–¢–µ–∫—Å—Ç: <code>${text}</code>\n–î–∞—Ç–∞: <code>${date.toISOString()}</code>`;
//     await ctx.telegram.sendMessage(LOG_CHANNEL_ID, message, { parse_mode: 'HTML' });
// });
//
// // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ –∫–∞–Ω–∞–ª–µ
// bot.on('edited_channel_post', async (ctx) => {
//     const channelTitle = ctx.chat.title || '–ù–µ–Ω–∞–∑–≤–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª';
//     const messageId = ctx.message.message_id;
//     const editedText = ctx.message.text || 'N/A';
//     const editDate = new Date(ctx.message.edit_date * 1000); // –î–∞—Ç–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
//
//     const message = `üìù –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –∫–∞–Ω–∞–ª–µ <code>${channelTitle}</code>\nMessage ID: <code>${messageId}</code>\n–û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç: <code>${editedText}</code>\n–î–∞—Ç–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: <code>${editDate.toISOString()}</code>`;
//     await ctx.telegram.sendMessage(LOG_CHANNEL_ID, message, { parse_mode: 'HTML' });
// });

// –§—É–Ω–∫—Ü–∏—è –ª–æ–≥ –≤ —Å–ø–µ—Ü —á–∞—Ç

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ª–æ–≥–∞ –Ω–∞ –≤–Ω–µ—à–Ω–∏–π —Ä–µ—Å—É—Ä—Å.
 * @param {Object} logData –î–∞–Ω–Ω—ã–µ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è.
 *
 * –û–±—ä–µ–∫—Ç logData –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –ø–æ–ª—è:
 * - user_id: {Number|String} –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ–±—ã—Ç–∏–µ –∫–æ—Ç–æ—Ä–æ–≥–æ –ª–æ–≥–∏—Ä—É–µ—Ç—Å—è.
 * - text: {String} –¢–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å.
 *   –ú–æ–∂–µ—Ç –≤–∫–ª—é—á–∞—Ç—å –≤ —Å–µ–±—è –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ–≥–æ –∏–º—è –∏ –¥—Ä—É–≥–∏–µ –¥–∞–Ω–Ω—ã–µ,
 *   –∫–æ—Ç–æ—Ä—ã–µ –±—ã–ª–∏ –ø–æ–ª—É—á–µ–Ω—ã –∏–ª–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Ö–æ–¥–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π.
 * - error: {Number} –§–ª–∞–≥, —É–∫–∞–∑—ã–≤–∞—é—â–∏–π –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–∫–∏ (0 - –±–µ–∑ –æ—à–∏–±–æ–∫, 1 - —Å –æ—à–∏–±–∫–æ–π).
 * - ok: {Number} –§–ª–∞–≥ —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏ –æ–ø–µ—Ä–∞—Ü–∏–∏ (1 - –æ–ø–µ—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞, 0 - –æ–ø–µ—Ä–∞—Ü–∏—è –Ω–µ —É—Å–ø–µ—à–Ω–∞).
 * - type: {String} –¢–∏–ø —Å–æ–±—ã—Ç–∏—è, –Ω–∞–ø—Ä–∏–º–µ—Ä, 'message' –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
 * - info: {String} –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ª–æ–≥–∏—Ä—É–µ–º–æ–º —Å–æ–±—ã—Ç–∏–∏, –∫–æ—Ç–æ—Ä—É—é –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞.
 *
 * –≠—Ç–∏ –ø–æ–ª—è –ø–æ–∑–≤–æ–ª—è—é—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å –≤ –ª–æ–≥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å–æ–±—ã—Ç–∏—è—Ö.
 */
async function sendLogData(logData) {
  try {
    await post(`${WEB_API}/log/log.php`, logData)
    console.log('–õ–æ–≥ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –≤–Ω–µ—à–Ω–∏–π —Ä–µ—Å—É—Ä—Å.')
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ª–æ–≥–∞ –Ω–∞ –≤–Ω–µ—à–Ω–∏–π —Ä–µ—Å—É—Ä—Å:', error)
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–∑–æ–≤–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ª–æ–≥–∞
async function sendToLog(ctx) {
  const { chat, from, text } = ctx.message
  if (chat.id !== GRAND_ADMIN) {
    // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è checkUser –∏ logMessage —É–∂–µ –æ–ø–∏—Å–∞–Ω—ã –∏ –¥–æ—Å—Ç—É–ø–Ω—ã –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
    const userData = await checkUser(chat.id)
    const fio = userData?.fio || 'N/A' // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ –§–ò–û —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ —Å–≤–æ–π—Å—Ç–≤–µ 'fio' —É userData
    const fullName = `${from.first_name ?? ''} ${from.last_name ?? ''}`.trim()
    const username = from.username || ''

    const logMessageToSend = {
      user_id: chat.id,
      text: text,
      error: 0,
      ok: 1,
      type: 'message',
      info: fio
    }

    await sendLogData(logMessageToSend)
  }
}

module.exports = {
  logNewChatMembers,
  logLeftChatMember,
  sendToLog
}
