// –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º —Å–æ–±—ã—Ç–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —á–∞—Ç
const { checkUser } = require('#src/api/index')
const { logMessage } = require('#src/utils/ru_lang')
const { getAllUsers } = require('#src/api/index')

async function logNewChatMembers(ctx) {
  const chatTitle = ctx.chat.title || '–ù–µ–Ω–∞–∑–≤–∞–Ω–Ω—ã–π —á–∞—Ç'
  const addedUsers = ctx.message.new_chat_members

  for (const newUser of addedUsers) {
    const username = newUser.username || 'N/A'
    const fullName =
      `${newUser.first_name || ''} ${newUser.last_name || ''}`.trim()
    const userId = newUser.id

    const usersData = await getAllUsers()
    const user = usersData.find((u) => u.user_id === userId)

    // –°–æ–∑–¥–∞–π—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç –Ω–∞–ª–∏—á–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    const message =
      `${emoji.ok} –î–æ–±–∞–≤–∏–ª–∏ –≤ –≥—Ä—É–ø–ø—É <code>${chatTitle}</code>\n\n` +
      logMessage(userId, user ? user.fio : 'N/A', username, fullName)

    await ctx.telegram.sendMessage(LOG_CHANNEL_ID, message, {
      parse_mode: 'HTML'
    })
  }
}

// –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º —Å–æ–±—ã—Ç–∏–µ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —á–∞—Ç–∞
async function logLeftChatMember(ctx) {
  const chatTitle = ctx.chat.title || '–ù–µ–Ω–∞–∑–≤–∞–Ω–Ω—ã–π —á–∞—Ç'
  const leftUser = ctx.message.left_chat_member

  if (leftUser) {
    const username = leftUser.username || 'N/A'
    const fullName =
      `${leftUser.first_name || ''} ${leftUser.last_name || ''}`.trim()
    const userId = leftUser.id

    const usersData = await getAllUsers()
    const user = usersData.find((u) => u.user_id === userId)

    const message =
      `${emoji.x} –ü–æ–∫–∏–Ω—É–ª –≥—Ä—É–ø–ø—É <code>${chatTitle}</code>\n\n` +
      logMessage(userId, user ? user.fio : 'N/A', username, fullName)

    await ctx.telegram.sendMessage(LOG_CHANNEL_ID, message, {
      parse_mode: 'HTML'
    })
  } else {
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–ª—É—á–∞—è, –∫–æ–≥–¥–∞ –æ–±—ä–µ–∫—Ç leftUser –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–∫–∏–Ω—É–ª —á–∞—Ç –¥–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–±—ã—Ç–∏—è)
    console.log('–û–±—ä–µ–∫—Ç leftUser –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.')
  }
}

// // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ –∫–∞–Ω–∞–ª–µ
// bot.on('channel_post', async (ctx) => {
//     const channelTitle = ctx.chat.title || '–ù–µ–Ω–∞–∑–≤–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª';
//     const messageId = ctx.message.message_id;
//     const text = ctx.message.text || 'N/A';
//     const date = new Date(ctx.message.date * 1000); // –î–∞—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
//
//     const message = `üì¢ –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –∫–∞–Ω–∞–ª–µ <code>${channelTitle}</code>\nMessage ID: <code>${messageId}</code>\n–¢–µ–∫—Å—Ç: <code>${text}</code>\n–î–∞—Ç–∞: <code>${date.toISOString()}</code>`;
//     await ctx.telegram.sendMessage(LOG_CHANNEL_ID, message, { parse_mode: 'HTML' });
// });
//
// // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ –∫–∞–Ω–∞–ª–µ
// bot.on('edited_channel_post', async (ctx) => {
//     const channelTitle = ctx.chat.title || '–ù–µ–Ω–∞–∑–≤–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª';
//     const messageId = ctx.message.message_id;
//     const editedText = ctx.message.text || 'N/A';
//     const editDate = new Date(ctx.message.edit_date * 1000); // –î–∞—Ç–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
//
//     const message = `üìù –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –∫–∞–Ω–∞–ª–µ <code>${channelTitle}</code>\nMessage ID: <code>${messageId}</code>\n–û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç: <code>${editedText}</code>\n–î–∞—Ç–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: <code>${editDate.toISOString()}</code>`;
//     await ctx.telegram.sendMessage(LOG_CHANNEL_ID, message, { parse_mode: 'HTML' });
// });

// –§—É–Ω–∫—Ü–∏—è –ª–æ–≥ –≤ —Å–ø–µ—Ü —á–∞—Ç

async function sendToLog(ctx) {
  const { chat, from, text } = ctx.message
  if (chat.id !== GRAND_ADMIN) {
    const userData = await checkUser(chat.id)
    const fio = userData?.fio || 'N/A' // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞—è, —á—Ç–æ –§–ò–û —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ —Å–≤–æ–π—Å—Ç–≤–µ 'fio'
    const fullName =
      (from.first_name ? from.first_name + ' ' : '') +
      (from.last_name ? from.last_name : '')
    const username = from.username || ''
    await bot.telegram.sendMessage(
      LOG_CHANNEL_ID,
      `<blockquote>${text}</blockquote>\n` +
        logMessage(chat.id, fio, username, fullName),
      { parse_mode: 'HTML' }
    )
  }
}

module.exports = {
  logNewChatMembers,
  logLeftChatMember,
  sendToLog
}
