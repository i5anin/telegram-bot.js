// –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å—Ä–µ–¥—ã –∏–∑ .env —Ñ–∞–π–ª–∞
require('dotenv').config()
const { Telegraf } = require('telegraf')
const LocalSession = require('telegraf-session-local')
const io = require('@pm2/io')

// –≤–∫–ª—é—á–∏—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
// –≤–∫–ª—é—á–∏—Ç—å –º–µ—Ç—Ä–∏–∫–∏ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)
io.init({ transactions: true, http: true })

// –ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª–µ–π
const { initCronJobs } = require('#src/modules/cron')
const { handleRegComment, checkRegistration } = require('#src/modules/reg')
const { handleTextCommand } = require('#src/modules/text')
const { handleHelpCommand, handleDocsCommand, handleOperatorCommand } = require('#src/modules/help')
const { oplataNotification } = require('#src/modules/oplata')
const { notifyUsers, notifyAllUsers } = require('#src/modules/notify')
const { handleStatusCommand, handleMsgCommand } = require('#src/utils/admin')
const { logNewChatMembers, logLeftChatMember, sendToLog } = require('#src/utils/log')
const { handleGetGroupInfoCommand } = require('#src/utils/csv')
const { runBot } = require('#src/modules/runBot')
const { handleForwardedMessage, whoCommand } = require('#src/modules/who')
const { createMetric } = require('#src/utils/metricPM2')
const {
    metricsNotificationDirector,
    formatMetricsMessageMaster,
    sendMetricsMessagesNach,
} = require('#src/modules/metrics')
const { handlePhoto } = require('#src/modules/photo')

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
const { BOT_TOKEN } = process.env

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegraf –±–æ—Ç–∞
const bot = new Telegraf(BOT_TOKEN)

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Å—Å–∏–∏
const localSession = new LocalSession({ database: 'session_db.json' })
bot.use(localSession.middleware())

// –°–µ—Å—Å–∏–æ–Ω–Ω—ã–π middleware
bot.use((ctx, next) => {
    ctx.session = ctx.session || { isAwaitFio: false, isAwaitComment: false, isUserInitiated: false }
    return next()
})


// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
global.SECRET_KEY = process.env.SECRET_KEY
global.WEB_API = process.env.WEB_API

global.GRAND_ADMIN = process.env.GRAND_ADMIN
global.LOG_CHANNEL_ID = process.env.LOG_CHANNEL_ID

global.DIR_OPLATA = process.env.DIR_OPLATA
global.DIR_METRIC = process.env.DIR_METRIC
global.KISELEV = process.env.KISELEV

global.DIR_TEST_GROUP = process.env.DIR_TEST_GROUP
global.ADMIN_DB = process.env.ADMIN_DB

global.OPLATA_REPORT_ACTIVE = process.env.OPLATA_REPORT_ACTIVE //OPLATA_REPORT_ACTIVE = true;
global.METRICS_REPORT_ACTIVE = process.env.METRICS_REPORT_ACTIVE //METRICS_REPORT_ACTIVE = true;


global.MODE = process.env.NODE_ENV || 'development'  // –ï—Å–ª–∏ NODE_ENV –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è 'development'
global.emoji = {
    x: '&#10060;',
    ok: '&#9989;',
    error: '&#10071;',
    warning: '&#x26A0;',
    bot: '&#129302;',
    star: '&#11088;',
    tech: '&#9881;',
    rating_1: 'ü•á',
    rating_2: 'ü•à',
    rating_3: 'ü•â',
    point: '&#183;',
    // point: '&#8226;', // ‚Ä¢
    // min_point: '&#183;', // ¬∑
}   //‚ùå //‚úÖ //‚ùó //‚ö† //ü§ñ //‚≠ê //‚öôÔ∏è // ü•á // ü•à // ü•â // ‚Ä¢ // ¬∑

global.bot = bot
global.stateCounter = {
    bot_update: 0,
    bot_check: 0,

    user_get_all: 0,
    users_get: 0,
    users_get_all_fio: 0,
    users_add: 0,

    comment_get_all: 0,
    comment_update: 0,

    oplata_get_all: 0,
    oplata_update: 0,

    instanceNumber: 0, //–¥–ª—è –º–µ—Ç—Ä–∏–∫–∏
}

// –°–ª—É—á–∞–π–Ω—ã–π –Ω–æ–º–µ—Ä —ç–∫–∑–µ–º–ø–ª—è—Ä–∞
const instanceNumber = Math.floor(Math.random() * 9000) + 1000
const currentDateTime = new Date()
stateCounter.instanceNumber = instanceNumber //–¥–ª—è –º–µ—Ç—Ä–∏–∫–∏

bot.use((ctx, next) => {
    if (ctx.message) {
        if (ctx.message.forward_from) {
            handleForwardedMessage(ctx, ctx.message.forward_from.id)  // –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–µ—Å–ª–∞–Ω–æ –∏ sender —Ä–∞–∑—Ä–µ—à–∏–ª —Å–≤—è–∑—ã–≤–∞–Ω–∏–µ
            return
        } else if (ctx.message.forward_sender_name) {
            handleForwardedMessage(ctx, ctx.message.forward_sender_name)  // –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–µ—Å–ª–∞–Ω–æ, –Ω–æ sender –∑–∞–ø—Ä–µ—Ç–∏–ª —Å–≤—è–∑—ã–≤–∞–Ω–∏–µ
            return
        }
    }
    return next()  // –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –ø–µ—Ä–µ—Å–ª–∞–Ω–æ –∏–ª–∏ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–æ–º–∞–Ω–¥—ã, –ø–µ—Ä–µ–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É —Å–ª–µ–¥—É—é—â–µ–º—É middleware
})


runBot(instanceNumber, currentDateTime)


// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ñ–æ—Ç–æ —Å –ø–æ–¥–ø–∏—Å—å—é
bot.on('photo', (ctx) => handlePhoto(ctx))

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
bot.command('reg_key', (ctx) => handleRegComment(ctx, ctx.session.isAwaitFio = true)) //['start', 'reg']
bot.command('new_comment', (ctx) => notifyUsers(ctx, ctx.session.isUserInitiated = true))
bot.command('new_comment_all', notifyAllUsers)
bot.command('help', handleHelpCommand)
bot.command('oplata', oplataNotification)
bot.command('msg', handleMsgCommand)
bot.command('status', (ctx) => handleStatusCommand(ctx, instanceNumber, currentDateTime))
bot.command('get_group_info', (ctx) => handleGetGroupInfoCommand(ctx))
bot.command('who', (ctx) => whoCommand(ctx))
bot.command(['m', 'metrics'], (ctx) => metricsNotificationDirector(ctx, 1))
bot.command('metrics_director_notification', (ctx) => metricsNotificationDirector(ctx, 0))
bot.command('metrics_nachalnic_notification', (ctx) => sendMetricsMessagesNach())
bot.command('metrics_master_notification', (ctx) => formatMetricsMessageMaster())

// ----------------------------------------------------------------
// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –±–ª–æ–∫–∞ –∫–Ω–æ–ø–æ–∫
function sendTwoByEightButtons(ctx) {
    // –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –∫–Ω–æ–ø–∫–∞–º–∏, –∏—Å–ø–æ–ª—å–∑—É—è –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    const keyboard = Markup.inlineKeyboard([
        [Markup.button.callback('–û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –æ—Ç –ø–ª–∞–Ω–∞', 'action_1'), Markup.button.callback('', 'action_2')],
        [Markup.button.callback('–ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ', 'action_3'), Markup.button.callback('-12%', 'action_4')],
        [Markup.button.callback('–ë—Ä–∞–∫', 'action_5'), Markup.button.callback('0%', 'action_6')],
        [Markup.button.callback('–û—Ç–¥–µ–ª –ø—Ä–æ–¥–∞–∂', 'action_7'), Markup.button.callback('318%', 'action_8')],
        [Markup.button.callback('–í–æ—Ä–æ–Ω–∫–∞', 'action_9'), Markup.button.callback('', 'action_10')],
        [Markup.button.callback('–ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ', 'action_11'), Markup.button.callback('76%', 'action_12')],
        [Markup.button.callback('–°–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏–µ', 'action_13'), Markup.button.callback('94%', 'action_14')],
        [Markup.button.callback('–ò—Ç–æ–≥–æ –≤–Ω. –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞', 'action_15'), Markup.button.callback('98%', 'action_16')],
        [Markup.button.callback('–£–ø–∞–∫–æ–≤–∫–∞', 'action_17'), Markup.button.callback('100%', 'action_18')],
        [Markup.button.callback('–ü—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å', 'action_17'), Markup.button.callback('', 'action_18')],
        [Markup.button.callback('–ü—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å', 'action_17'), Markup.button.callback(' 2¬†809¬†‚ÇΩ/—á–∞—Å', 'action_18')],
        [Markup.button.callback('–û—Ç–≥—Ä—É–∑–∫–∞ –ú/–û', 'action_17'), Markup.button.callback('8¬†542¬†849¬†‚ÇΩ', 'action_18')],
        [Markup.button.callback('–û—Ç–≥—Ä—É–∑–∫–∞ —Å –ù–î–°', 'action_17'), Markup.button.callback('14¬†533¬†900¬†‚ÇΩ', 'action_18')],
    ]);

    // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    ctx.reply('–ù–µ–∑–∞–≤–µ—Ä—à—ë–Ω–Ω–æ–µ –ø–æ –ú/–û: 111¬†849¬†201¬†‚ÇΩ\n' +
        '–°–ª–µ—Å–∞—Ä–Ω—ã–π —É—á–∞—Å—Ç–æ–∫: 8¬†024¬†380¬†‚ÇΩ\n' +
        '–û–¢–ö: 1¬†593¬†001¬†‚ÇΩ\n' +
        '–£–ø–∞–∫–æ–≤–∫–∞: 289¬†501¬†‚ÇΩ\n' +
        '–î–æ—Ä–∞–±–æ—Ç–∫–∞ –ß–ü–£: 340¬†165¬†‚ÇΩ\n' +
        '–î–æ—Ä–∞–±–æ—Ç–∫–∞ –≤ —Å–ª–µ—Å–∞—Ä–Ω–æ–º: 198¬†832¬†‚ÇΩ\n' +
        '–°–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏–µ: 149¬†117¬†‚ÇΩ\n' +
        '\n' +
        '–ò—Ç–æ–≥–æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞: 122¬†444¬†197¬†‚ÇΩ\n' +
        '–û–∂–∏–¥–∞–µ–º–∞—è –ø—Ä–µ–¥–æ–ø–ª–∞—Ç–∞ —Å –ù–î–°: 160¬†868¬†286¬†‚ÇΩ\n' +
        '–ò—Ç–æ–≥–æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ —Å –ù–î–°: 166¬†161¬†354¬†‚ÇΩ\n' +
        '–ì–æ—Ç–æ–≤–∞—è –ø—Ä–æ–¥—É–∫—Ü–∏—è –Ω–∞ —Å–∫–ª–∞–¥–µ —Å –ù–î–°: 24¬†743¬†555¬†‚ÇΩ', keyboard);
}


// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∫–æ–º–∞–Ω–¥—ã /btn
bot.command('btn', sendTwoByEightButtons);
// ----------------------------------------------------------------

const { Markup } = require('telegraf');

async function sendTableAsButtons(ctx) {
    // await sendToLog(ctx)
    const chatId = ctx.message.chat.id  // –ü–æ–ª—É—á–µ–Ω–∏–µ chatId –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ ctx
    try {
        const registrationData = await checkRegistration(chatId)  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        const isRegistered = registrationData.exists

        if (isRegistered) {  // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω
            const keyboard = Markup.inlineKeyboard([
                [Markup.button.url('–û–±—â–∞—è —à—Ç–∞—Ç–Ω–∞—è –ø–∞–ø–∫–∞', 'https://drive.google.com/drive/folders/1y5W8bLSrA6uxMKBu_sQtJp7simhDExfW')],
                [Markup.button.url('–î–æ–ª–∂–Ω–æ—Å—Ç–Ω–∞—è –ø–∞–ø–∫–∞ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞', 'https://drive.google.com/drive/folders/1ZmouCoENMzQ7RZxhpmAo-NeZmAanto0V')],
                [Markup.button.url('–°–û–§–¢ (–õ–æ–∫–∞–ª—å–Ω–æ)', 'http://eml.pfforum/')],
                [Markup.button.url('–ê—Ä—Ö–∏–≤ —Å–æ–±—Ä–∞–Ω–∏–π', 'https://disk.yandex.ru/d/ajVEHCmS5s2T2A')],
            ])

            await ctx.reply('–í–æ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ–ª–µ–∑–Ω—ã—Ö —Å—Å—ã–ª–æ–∫:', keyboard)
        } else {  // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω
            await ctx.reply('–î–æ—Å—Ç—É–ø –∑–∞–∫—Ä—ã—Ç.\n–í—ã –¥–æ–ª–∂–Ω—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —ç—Ç–∏–º —Ä–µ—Å—É—Ä—Å–∞–º.')
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:', error)
        await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.')
    }
}

bot.command('table', (ctx) => sendTableAsButtons())

// bot.command('metrics_2', (ctx) => metricsNotificationProiz(ctx, 0))
// bot.command('metrics_old', metricsNotification)
bot.command('docs', (ctx) => handleDocsCommand(ctx))
bot.command('oper', (ctx) => handleOperatorCommand(ctx))
bot.on('message', (ctx) => handleTextCommand(ctx))
bot.on('text', (ctx) => handleTextCommand(ctx)) // –æ—Å–æ–±–æ –Ω–µ –Ω—É–∂–Ω–∞ –Ω–æ –ø—É—Å—Ç—å –±—É–¥–µ—Ç


// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π

bot.on('new_chat_members', logNewChatMembers)
bot.on('left_chat_member', logLeftChatMember)

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.launch().catch((err) => {
    console.error('Fatal Error! Error while launching the bot:', err)
    setTimeout(() => bot.launch(), 30000) // –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥
})

createMetric('bot_check', stateCounter, 'bot_check')
createMetric('user_get_all', stateCounter, 'user_get_all')
createMetric('users_get_all_fio', stateCounter, 'users_get_all_fio')
createMetric('user_add', stateCounter, 'user_add')
createMetric('users_get', stateCounter, 'users_get')
createMetric('comment_get_all', stateCounter, 'comment_get_all')
createMetric('comment_update', stateCounter, 'comment_update')
createMetric('oplata_get_all', stateCounter, 'oplata_get_all')
createMetric('oplata_update', stateCounter, 'oplata_update')
createMetric('instanceNumber', stateCounter, 'instanceNumber')

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è cron-–∑–∞–¥–∞–Ω–∏–π
initCronJobs(currentDateTime, instanceNumber)
